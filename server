#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <netdb.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <sys/un.h>
#include <sys/socket.h>
#include <sys/types.h>

#define PORTNUM 9003
#define MAXLINE 256


int main(int argc, char *argv[]){
  struct sockaddr_in sin, cli;
  int sd, ns1, clientlen = sizeof(cli);
  int pid;
  char buf[MAXLINE+1];
  int nbytes;


  if(strcmp(argv[1],"-h") == 0){
    printf("[--help--]\n");
    printf("number (1) : Da Vinci code \n" );
    printf("other game");
  }else if(strcmp(argv[1],"-1")==0){
        if((sd = socket(AF_INET, SOCK_STREAM, 0)) == 0){
          perror("socket");
          exit(0);
        }
        memset((char *)&sin, '\0',sizeof(sin));
        sin.sin_family = AF_INET;
        sin.sin_port = htons(PORTNUM);
        sin.sin_addr.s_addr = inet_addr("127.0.2.5");

        if(bind(sd,(struct sockaddr *)&sin, sizeof(sin))){
          perror("bind");
          exit(0);
        }

        if(listen(sd, 5)){
          perror("listen");
          exit(1);
        }
        if((ns1=accept(sd,(struct sockaddr *)&cli, &clientlen))==-1){
                perror("accept");
                exit(1);
        }
        if((pid=fork())==-1){
          close(ns1);
          perror("fork()");
          exit(0);
        }
        else if(pid==0){
          while(1){
            fgets(buf,sizeof(buf),stdin);
            nbytes = strlen(buf);
            write(ns1,buf,MAXLINE);
            if((strncmp,"exit",4)==0){
              puts("GOOD Bye.");
              exit(0);
            }
          }
          exit(0);
        }
        else if(pid>0){
          while(1){
            if(nbytes = read(ns1,buf,MAXLINE)<0){
              perror("read()");
              exit(0);
            }
            printf("%s",buf);
            if(strncmp(buf,"exit",4)==0){
              exit(0);
            }

          }
        }
        return 0;
  }
}

